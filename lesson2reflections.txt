sWhat happens when you initialize a repository? Why do you need to do it?

it creates the git folder which contains all the commands to manage the repository. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

the staging area allows the user to place multiple files in prior to actually committing and allows the user to actually make logical changes. 

How can you use the staging area to make sure you have one commit per logical change?

by allowing you to update files and then check the final changes before you actually commit them.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

when you want to try out a new idea or update to a program but you do now want to risk messing up the original 

How do the diagrams help you visualize the branch structure?

by allowing me to visualize the organization of git

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a new file that contains both changes in it as compared to the orginal file. Because Git takes all the changes from one path and all the changes from another path and merges them together taking into account what the original file appeared to be.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

the pros are that lines of code which are obiviously different can automatically be merged, but lines of code which conflict in the changes have to be manually fixed but git does show those to you


