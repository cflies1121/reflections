Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Similiar to the push auto vs manual, you may not want all changes published publicly yet and may want to keep some things experiemental.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

forks are copies of repositories that are only on github and can be cloned to device, clones are exact copies of repositories from device to github and back, branches are just differenct versions of the same repository.

What is the benefit of having a copy of the last known state of the remote stored locally?

to be able to see the changes that where made the last time the state was updated even if no internet connection is available.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

By emailing code back and forth or just showing the other person what is going on, github would definatly be easier due to the way it allows you to merge, create, and destroy all while keeping the original the same regardless of the condition of the experimental versions

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When you are doing something that changes the master branch and the master branch must stay a certain way, the first approach allows a more simpliefied way to change things in collaboration but changes might get lost, the second approach is more complex but allows for only working changes to be allowed in the master files.
